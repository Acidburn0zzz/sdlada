with "sdl_version";

library project SDL is
   type Platform_Type is ("linux", "bsd", "windows", "macosx", "ios", "android");
   type Mode_Type is ("debug", "release");
   type Build_Type is ("static", "shared");

   Platform : Platform_Type := external ("SDL_PLATFORM", "linux");
   Mode     : Mode_Type     := external ("SDL_MODE", "debug");
   Build    : Build_Type    := external ("SDL_BUILD", "static");

   for Source_Dirs  use ("src");
   for Library_Name use "sdlada";
   for Object_Dir   use "obj";
   for Library_Dir  use "lib";
   for Library_Version use "libsdlada.so." & SDL_Version.Version;
   for Externally_Built use "true";

   case Build is
      when "static" =>
         for Library_Kind use "static";

      when "shared" =>
         for Library_Kind use "relocatable";
   end case;

   package Compiler is
      C_Switches   := ("-ffunction-sections", "-fdata-sections");
      Ada_Switches := ("-ffunction-sections", "-fdata-sections",
                       "-gnat2012", "-gnata", "-gnato", "-gnatE",
                       "-gnaty", "-gnaty-s", "-gnatyO", "-gnatyM120", "-gnatyO");

      case Mode is
         when "debug" =>
            C_Switches   := C_Switches & ("-O0", "-g");
            Ada_Switches := Ada_Switches & ("-O0", "-g");

         when "release" =>
            C_Switches   := C_Switches & ("-O2");
            Ada_Switches := Ada_Switches & ("-O2");
      end case;

      case Build is
         when "shared" =>
            C_Switches   := C_Switches & ("-fpic");
            Ada_Switches := Ada_Switches & ("-fpic");

         when others =>
            null;
      end case;

      for Default_Switches ("C") use C_Switches;
      for Default_Switches ("Ada") use Ada_Switches;
   end Compiler;
end SDL;
